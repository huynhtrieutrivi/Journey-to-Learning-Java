public class NumberToWords {
    public static void numberToWords(int number){
        int reverse = reverse(number);
        int lastDigit;
        int reCount = getDigitCount(reverse);
        if(reverse < 0){
            System.out.println("Invalid Value");
            return;
        }
        if(reverse == 0){
            System.out.println("Zero ");
            return;
        }

        while(reverse!=0){
            lastDigit = reverse % 10;
            switch(lastDigit) {
                case 1:
                    System.out.print("One ");
                    break;
                case 2:
                    System.out.print("Two ");
                    break;
                case 3:
                    System.out.print("Three ");
                    break;
                case 4:
                    System.out.print("Four ");
                    break;
                case 5:
                    System.out.print("Five ");
                    break;
                case 6:
                    System.out.print("Six ");
                    break;
                case 7:
                    System.out.print("Seven ");
                    break;
                case 8:
                    System.out.print("Eight ");
                    break;
                case 9:
                    System.out.print("Nine ");
                    break;
                default:
                    System.out.print("Zero ");
                    break;
            }
            reverse /= 10;
        }
        if(getDigitCount(number) != reCount){
            int count1 = getDigitCount(number);
            int count2 = reCount;
            int countSum = count1-count2;
            for(int i = 0; i < countSum; i++){
                System.out.print("Zero ");
            }
        }
    }
    public static int reverse(int number){
        int lastDigit;
        int reverse = 0;
        if(number == 0){
            return 0;
        }
        while(number!=0){
            lastDigit = number % 10;
            reverse = (reverse * 10) + lastDigit;
            number /= 10;
        }
        return reverse;
    }
    public static int getDigitCount(int number){
        if(number < 0){
            return -1;
        }
        int count = 0;
        if(number == 0){
            count++;
        }
        while(number!=0){
            count++;
            number /= 10;
        }
        return count;
    }
}
